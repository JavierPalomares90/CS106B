{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red170\green13\blue145;\red92\green38\blue153;
\red46\green13\blue110;\red38\green71\blue75;\red28\green0\blue207;\red100\green56\blue32;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab560
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 /* Returns whether it's possible to provide coverage to all of the cities*/\cf0 \
\cf3 bool\cf0  canOfferUniversalCoverage(\cf4 Set\cf0 <\cf4 string\cf0 >& cities,\
                               \cf4 Vector\cf0 < \cf4 Set\cf0 <\cf4 string\cf0 > >& locations,\
                               \cf3 int\cf0  numHospitals,\
                               \cf4 Vector\cf0 < \cf4 Set\cf0 <\cf4 string\cf0 > >& \cf5 result\cf0 ) \{\
	\cf2 //All possible combinations of locations of size numHospitals\cf0 \
	\cf4 Vector\cf0 <\cf4 Set\cf0 <\cf4 string\cf0 > > allPossibleCombinations = \cf6 combinationsOf\cf0 (numHospitals, cities); \
	\
	\cf3 if\cf0 (cities.\cf5 size\cf0 () == \cf7 0\cf0 )\{\
		\cf3 return\cf0  \cf3 true\cf0 ;\
	\}\cf3 if\cf0 (numHospitals == \cf7 0\cf0 )\{\
		\cf3 return\cf0  \cf3 false\cf0 ;\
	\}\cf3 else\cf0 \{\
		\
		\cf2 //Cities that won't be covered by hospital 0\cf0 \
		\cf4 Set\cf0 <\cf4 string\cf0 > citiesLeftToCover = cities;\
		\cf8 foreach\cf0 (\cf4 string\cf0  city \cf8 in\cf0  locations[\cf7 0\cf0 ])\{\
			citiesLeftToCover.\cf5 remove\cf0 (city);\
		\}\
		\
		\cf2 // Remaining hospitals\cf0 \
		\cf4 Vector\cf0 < \cf4 Set\cf0 <\cf4 string\cf0 > > remainingLocations = locations;\
		remainingLocations.\cf5 removeAt\cf0 (\cf7 0\cf0 );\
		\
		\cf3 return\cf0  \cf6 canOfferUniversalCoverage\cf0 (citiesLeftToCover, remainingLocations, numHospitals - \cf7 1\cf0 ,\cf5 result\cf0 );\
	\}	\
	\cf3 return\cf0  \cf3 false\cf0 ;\
		\
\}	\
\
}